 1. Set-up PostgreSQL database
   sudo apt-get install cmake
   sudo apt-get install libncurses5 libncurses5-dev
   sudo apt-get install build-essential
   sudo groupadd postgres
   sudo useradd -d /home/postgres -m postgres -g postgres sudo
   sudo passwd postgres (postgres)
   su - postgres
   wget https://ftp.postgresql.orgpub/source/v9.1.14/postgresql-9.1.14.tar.gz
   tar xvfz postgresql-9.1.14.tar.gz 
   sudo apt-get install libreadline-dev
   sudo apt-get install zlib1g-dev
   cd postgresql-9.1.14/
   ./configure
   make 
   sudo make install
   cd
   bunzip2 q3c_1.4.23.tar.bz2 
   tar xvf q3c_1.4.23.tar 
   mv q3c-1.4.23 postgresql-9.1.14/contrib/
   cd postgresql-9.1.14/contrib/
   cd q3c-1.4.23/
   make NO_PGXS=1
   sudo make NO_PGXS=1 install
   cd ../adminpack/
   make NO_PGXS=1
   sudo make NO_PGXS=1 install
   sudo apt-get install pgadmin3
   sudo mkdir /data/postgres/log
   sudo chown -R postgres:postgres /data/postgres
   nedit .bashrc (add export LD_LIBRARY_PATH=/usr/local/pgsql/lib)
   echo $LD_LIBRARY_PATH 
   mkdir /data/postgres/data-9.1.14
   /usr/local/pgsql/bin/initdb -D /data/postgres/data-9.1.14
   nedit .bashrc 
   (add alias pgsql_start="/usr/local/pgsql/bin/pg_ctl -D /data/postgres/data-9.1.14
   start") 
   (add alias pgsql_stop="/usr/local/pgsql/bin/pg_ctl -D /data/postgres/data-9.1.14
   stop")
   source .bashrc 
   nedit /data/postgres/data-9.1.14/pg_hba.conf 
# TYPE  DATABASE    USER        CIDR-ADDRESS          METHOD
# "local" is for Unix domain socket connections only
local   all         all                               trust
# IPv4 local connections:
host    all         all         127.0.0.1/32          md5
host    all         all         193.147.153.32 0.0.0.0         md5
host    all         all         172.24.0.0 255.255.0.0     md5
host    all         all         10.68.0.0 255.255.0.0      md5
# IPv6 local connections:
host    all         all         ::1/128   
   nedit /data/postgres/data-9.1.14/postgresql.conf 
listen_addresses = '*'
   pgsql_start
   psql -U postgres
   postgres=# alter role postgres password 'postgres';
   postgres=# CREATE EXTENSION adminpack;
   psql -U postgres < /home/ginga/postgresql-9.1.14/contrib/adminpack/adminpack--1.0.sql 
   psql -U postgres < /home/ginga/postgresql-9.1.14/contrib/q3c-1.4.23/q3c.sql
   sudo cp contrib/start-scripts/linux /etc/init.d/postgresql
   sudo chmod +x /etc/init.d/postgresql
   sudo update-rc.d postgresql defaults
   sudo nedit /etc/init.d/postgresql (edit PGDATA, PGUSER and PGLOG variables) 
  
2. Populate database tables

2.1 Observations
cd ginga-toolbox/bin
./generate_db_schema.sh --file /tmp/create-database.sql
Open pgadmin3, copy and paste create-database.sql contents
su - postgres 
psql -U postgres
COPY public.observation FROM '/path/to/ginga_observations.csv' DELIMITER ',' CSV;

2.2 Targets
   ./ingest_target_db.sh 
  
2.3 LACDUMP
   ./ingest_lacdump_db.sh -d /data/ginga/lacdump

2.4 LACDUMP background
   sudo ./ingest_background_db.sh -d ~/share/pub/ginga/dat  

3. Create database indexes
 LACDUMP database table indexes:
 CREATE INDEX idx_lacdump_date ON lacdump (date ASC NULLS LAST)
 CREATE INDEX idx_lacdump_target ON lacdump (target ASC NULLS LAST)
 
 psql -U postgres
 CREATE INDEX idx_lacdump_q3c ON lacdump (q3c_ang2ipix(ra_deg_b1950, dec_deg_b1950)); 
 [Optional] CLUSTER idx_lacdump_q3c ON lacdump;
 ANALYZE lacdump;
 ANALYE observation;
 ANALYZE target;
 ANALYZE observation_bg;
 ANALYZE observation_data;
